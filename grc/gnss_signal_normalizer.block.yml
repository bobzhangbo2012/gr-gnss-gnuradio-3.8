id: gnss_signal_normalizer
label: Signal Normalizer
category: '[gnss]'

templates:
  imports: import gnss
  make: gnss.signal_normalizer_${type}(${vlen}, ${resolution})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as \$keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
parameters:
- id: vlen
  label: Vec Length
  dtype: int
  default: '1'
  hide: part

- id: type
  label: Type
  dtype: enum
  options: [s8, u8, s16, u16]
  option_labels: [int8_t, uint8_t, int16_t, uint16_t]
  option_attributes:
    io: [s8, s8, s16, s16]

- id: resolution
  label: ADC Resolution
  dtype: int

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: in
  dtype: ${itype.io}
  vlen: ${vlen}

outputs:
- label: out
  dtype: fc64
  vlen: ${vlen}

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
